apply plugin: 'java'

sourceSets {
  main {
    java {
      srcDirs = ['src']
    }
  } 
}

//sourceSets.main.compileClasspath += files('build')

task createDirectories {
  doLast {
    mkdir "build"
    mkdir "dist"
    mkdir "lib/passwordio"
  }
}

configure(createDirectories) {   
  group = 'Intermediate'
  description = 'Create required directories that do not exist in the git repo.'
}

task compilePasswordio(type: JavaCompile, dependsOn: createDirectories) {
  source = fileTree(dir: 'src/passwordio', include: '*.java')
  classpath = files('.')
  destinationDirectory = file('build')
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compilePasswordio) {
  group = 'Intermediate'
  description = 'Compile passwordio package.'
}

task compileGui(type: JavaCompile, dependsOn: compilePasswordio) {
  source = fileTree(dir: 'src/gui', include: '*.java')
  classpath = files('build')
  destinationDirectory = file('build')
  options.compilerArgs << '-Xlint'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compileGui) {
  group = 'Intermediate'
  description = 'Compile gui package.'
}

task jarGui(type: Jar, dependsOn: compileGui) {
  manifest {
    attributes 'Main-Class': 'gui.PasswordProtector'
  }
  archiveBaseName = 'PasswordProtector'
  destinationDirectory = file('dist')
  from ('build')
}

configure(jarGui) {
  group = 'Final'
  description = 'Build gui for distribution'
}