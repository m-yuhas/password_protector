apply plugin: 'java'

sourceSets {
  main {
    java {
      srcDirs = ['src']
    }
  }
}

task createDirectories {
  doLast {
    mkdir 'build'
    mkdir 'dist'
  }
}

configure(createDirectories) {   
  group = 'Intermediate'
  description = 'Create required directories that do not exist in the git repo.'
}

task compilePasswordio(type: JavaCompile) {
  dependsOn 'createDirectories'
  source = fileTree(dir: 'src/passwordio', include: '*.java')
  classpath = files('build')
  destinationDirectory = file('build')
  options.compilerArgs << '-Xlint'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compilePasswordio) {
  group = 'Intermediate'
  description = 'Compile passwordio package.'
}

task compileGui(type: JavaCompile) {
  dependsOn 'compilePasswordio'
  source = fileTree(dir: 'src/gui', include: '*.java')
  classpath = files('build')
  destinationDirectory = file('build')
  options.compilerArgs << '-Xlint'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compileGui) {
  group = 'Intermediate'
  description = 'Compile gui package.'
}

task jarGui(type: Jar) {
  dependsOn 'compileGui'
  manifest {
    attributes 'Main-Class': 'gui.PasswordProtector'
  }
  archiveBaseName = 'PasswordProtector'
  destinationDirectory = file('dist')
  from fileTree(dir: 'build', include: 'passwordio/*')
  from fileTree(dir: 'build', include: 'gui/*')
  from fileTree(dir: 'resources', include: 'gui/*')
}

configure(jarGui) {
  group = 'Final'
  description = 'Build gui for distribution.'
}

task compileCli(type: JavaCompile) {
  dependsOn 'compilePasswordio'
  source = fileTree(dir: 'src/cli', include: '*.java')
  classpath = files('build')
  destinationDirectory = file('build')
  options.compilerArgs << '-Xlint'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compileCli) {
  group = 'Intermediate'
  description = 'Compile cli package.'
}

task jarCli(type: Jar) {
  dependsOn 'compileCli'
  manifest {
    attributes 'Main-Class': 'cli.PasswordProtectorCli'
  }
  archiveBaseName = 'PasswordProtectorCli'
  destinationDirectory = file('dist')
  from fileTree(dir: 'build', include: 'passwordio/*')
  from fileTree(dir: 'build', include: 'cli/*')
  from fileTree(dir: 'resources', include: 'cli/*')
}

configure(jarCli) {
  group = 'Final'
  description = 'Build cli for distribution.'
}

task compileIconCreator(type: JavaCompile) {
  dependsOn 'createDirectories'
  source = fileTree(dir: 'src/icon', include: '*.java')
  classpath = files('build')
  destinationDirectory = file('build')
  options.compilerArgs << '-Xlint'
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

configure(compileIconCreator) {
  group = 'Intermediate'
  description = 'Compile classes to create icon for app bundle.'
}
